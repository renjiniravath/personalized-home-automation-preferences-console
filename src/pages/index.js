import styles from '@/styles/Home.module.css'
import '@fontsource/roboto/300.css';
import '@fontsource/roboto/400.css';
import '@fontsource/roboto/500.css';
import '@fontsource/roboto/700.css';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import Home from './home';
import Login from './login';
import Head from 'next/head';
import { useState, useEffect } from 'react';
import { checkIfUserIsAuthorized } from './api/user';
import AlertScreen from './alertScreen';


const darkTheme = createTheme({
  palette: {
    mode: 'dark',
  },
});

export default function Landing() {
  const [username, setUsername] = useState('')
  const [alertMessage, setAlertMessage] = useState("")
  const [alertColor, setAlertColor] = useState("")

  useEffect(() => {
    const username = localStorage.getItem("username")
    if (username)
      handleLogin(username)
  });

  const handleLogin = async (loginInput) => {
    if (loginInput) {
      try {
        await checkIfUserIsAuthorized(loginInput)
        localStorage.setItem("username", loginInput)
        setUsername(loginInput)
      } catch (error) {
        flashAlert("error", error.message)
      }
    }
  }

  const flashAlert = (alertColor, alertMessage) => {
    setAlertColor(alertColor)
    setAlertMessage(alertMessage)
    setTimeout(() => {
      setAlertColor("")
      setAlertMessage("")
    }, 1500);
  }

  const handleLogout = () => {
    localStorage.removeItem("username")
    setUsername("")
  }

  return (
    <ThemeProvider theme={darkTheme}>
      <Head>
        <title>Personalised Home Automation</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AlertScreen alertColor={alertColor} alertMessage={alertMessage} />
      {
        username ? <Home handleLogout={handleLogout} username={username} flashAlert={flashAlert}/> : <Login handleLogin={handleLogin} />
      }
    </ThemeProvider>
  )
}
